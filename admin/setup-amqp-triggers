#!/usr/bin/env bash

set -e -u

# shellcheck source=admin/lib/common.inc.bash
source "$(dirname "${BASH_SOURCE[0]}")/lib/common.inc.bash"

HELP=$(cat <<EOH
Usage: $SCRIPT_NAME <clean|install|uninstall|help>

Commands:
  clean       Remove temporary install scripts and uninstall scripts.
  install     Create database triggers and add uninstall scripts.
  uninstall   Drop database triggers and remove uninstall scripts.
  help        Print this help message
EOH
)

if [ $# -ne 1 ]
then
  echo >&2 "$SCRIPT_NAME: wrong number of arguments"
  echo >&2 "Try '$SCRIPT_NAME help' for usage."
  exit 64 # EX_USAGE
fi

LOCAL_TRIGGERS_DIR="$(dirname "${BASH_SOURCE[0]}")/.setup-amqp-triggers-sql"
REMOTE_TRIGGERS_DIR=/tmp/indexer-sql

generate_sql_scripts() {
  $DOCKER_COMPOSE_CMD exec indexer python -m sir triggers --entity-type artist --entity-type release-group
  $DOCKER_COMPOSE_CMD exec indexer ./GenerateDropSql.pl
}

copy_sql_scripts() {
  remove_temp_sql_scripts_from_host
  remove_temp_sql_scripts_from_container

  indexer_container_id="$($DOCKER_COMPOSE_CMD ps -q indexer)"
  $DOCKER_CMD cp "$indexer_container_id":/code/sql "$LOCAL_TRIGGERS_DIR"
  if [ "$(stat -c %U "$LOCAL_TRIGGERS_DIR")" != "$(id -un)" ]
  then
    sudo chown -R "$(id -un):$(id -gn)" "$LOCAL_TRIGGERS_DIR"
  fi

  musicbrainz_container_id="$($DOCKER_COMPOSE_CMD ps -q musicbrainz)"
  $DOCKER_CMD cp "$LOCAL_TRIGGERS_DIR" "$musicbrainz_container_id":"$REMOTE_TRIGGERS_DIR"

  remove_temp_sql_scripts_from_host
}

remove_temp_sql_scripts_from_host() {
  if [ -e "$LOCAL_TRIGGERS_DIR" ]
  then
    if [ "$(stat -c %U "$LOCAL_TRIGGERS_DIR")" != "$(id -un)" ]
    then
      sudo rm -fr"${1:+v}" "$LOCAL_TRIGGERS_DIR"
    else
      rm -fr"${1:+v}" "$LOCAL_TRIGGERS_DIR"
    fi
  fi
}

remove_temp_sql_scripts_from_container() {
  $DOCKER_COMPOSE_CMD exec musicbrainz rm -fr"${1:+v}" "$REMOTE_TRIGGERS_DIR"
}

case "$1" in
  clean     )
    if ! $DOCKER_COMPOSE_CMD ps musicbrainz | grep -qw 'running\|Up'
    then
      echo >&2 "$SCRIPT_NAME: cannot clean: " \
               "the Docker Compose service 'musicbrainz' is not up"
      echo >&2 "Try '$DOCKER_COMPOSE_CMD up -d musicbrainz' from '$MB_DOCKER_ROOT'"
      exit 69 # EX_UNAVAILABLE
    fi

    echo "Cleaning indexer triggers install/uninstall scripts up ..."

    remove_temp_sql_scripts_from_host -v
    remove_temp_sql_scripts_from_container -v
    ;;
  install   )
    for service in indexer musicbrainz
    do
      if ! $DOCKER_COMPOSE_CMD ps "$service" | grep -qw 'running\|Up'
      then
        echo >&2 "$SCRIPT_NAME: cannot install: " \
                 "the Docker Compose service '$service' is not up"
        echo >&2 "Try '$DOCKER_COMPOSE_CMD up -d $service' from '$MB_DOCKER_ROOT'"
        exit 69 # EX_UNAVAILABLE
      fi
    done

    generate_sql_scripts
    copy_sql_scripts

    echo "Installing indexer triggers ..."

    $DOCKER_COMPOSE_CMD exec musicbrainz indexer-triggers.sh "$REMOTE_TRIGGERS_DIR" create
    ;;
  uninstall )
    for service in indexer musicbrainz
    do
      if ! $DOCKER_COMPOSE_CMD ps "$service" | grep -qw 'running\|Up'
      then
        echo >&2 "$SCRIPT_NAME: cannot uninstall: " \
                 "the Docker Compose service '$service' is not up"
        echo >&2 "Try '$DOCKER_COMPOSE_CMD up -d $service' from '$MB_DOCKER_ROOT'"
        exit 69 # EX_UNAVAILABLE
      fi
    done

    generate_sql_scripts
    copy_sql_scripts

    echo "Uninstalling indexer triggers ..."

    $DOCKER_COMPOSE_CMD exec musicbrainz indexer-triggers.sh "$REMOTE_TRIGGERS_DIR" drop

    remove_temp_sql_scripts_from_container
    ;;
  help|-h|--help)
    echo "$HELP"
    exit 0 # EX_OK
    ;;
  *         )
    echo >&2 "$SCRIPT_NAME: unrecognized command '$1'"
  echo >&2 "Try '$SCRIPT_NAME help' for usage."
    exit 64 # EX_USAGE
    ;;
esac

echo "Done."

# vi: set et sts=2 sw=2 ts=2 :
